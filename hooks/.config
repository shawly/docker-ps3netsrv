
#!/usr/bin/env bash

set +u
echo "variables (see https://docs.docker.com/docker-hub/builds/advanced/):"
echo "SOURCE_BRANCH:   $SOURCE_BRANCH"
echo "SOURCE_COMMIT:   $SOURCE_COMMIT"
echo "COMMIT_MSG:      $COMMIT_MSG"
echo "DOCKER_REPO:     $DOCKER_REPO"
echo "DOCKERFILE_PATH: $DOCKERFILE_PATH"
echo "DOCKER_TAG:      $DOCKER_TAG"
echo "IMAGE_NAME:      $IMAGE_NAME"
echo

: "${DOCKERFILE_PATH:=./Dockerfile}"
: "${IMAGE_NAME:=shawly/ps3netsrv}"

echo "variables after applying defaults:"
echo "DOCKERFILE_PATH: $DOCKERFILE_PATH"
echo "IMAGE_NAME:      $IMAGE_NAME"
echo

export PATH="$PWD/docker:$PATH"

# =>
# https://hub.docker.com/u/arm64v8/
# https://hub.docker.com/u/arm32v7/
# https://hub.docker.com/u/arm32v6/
# https://hub.docker.com/u/arm32v5/
declare -A base_image_prefix_map=( ["aarch64"]="arm64v8/" ["armv7"]="arm32v7/" ["armhf"]="arm32v6/" ["armel"]="arm32v5/" ["i386"]="i386/" ["amd64"]="" )

# => s6 overlay architecture
declare -A s6_overlay_arch_map=( ["aarch64"]="aarch64" ["armv7"]="arm" ["armhf"]="armhf" ["armel"]="arm" ["i386"]="x86" ["amd64"]="amd64" )

# => dpkg -L qemu-user-static | grep /usr/bin/
declare -A docker_qemu_arch_map=( ["aarch64"]="aarch64" ["armv7"]="arm" ["armhf"]="arm" ["armel"]="arm" ["i386"]="i386" ["amd64"]="x86_64" )

# => https://github.com/docker/docker-ce/blob/76ac3a4952a9c03f04f26fc88d3160acd51d1702/components/cli/cli/command/manifest/util.go#L22
declare -A docker_to_manifest_map=( ["aarch64"]="arm64" ["armv7"]="arm" ["armhf"]="arm" ["armel"]="arm" ["i386"]="386" ["amd64"]="amd64" )
declare -A docker_to_variant_map=( ["aarch64"]="v8" ["armv7"]="v7" ["armhf"]="v6" ["armel"]="v5" ["i386"]="" ["amd64"]="" )

docker_tags=($DOCKER_TAG latest)

# what we want to build
build_architectures=(amd64 aarch64 armv7 armhf i386)
declare -A uniq_arch
verified_build_architectures=()
native_arch="$(docker version -f '{{.Server.Arch}}')"
uniq_arch["${native_arch}"]=1

# what we can build
for arch in ${build_architectures[@]}; do
  if [ -f "qemu-${docker_qemu_arch_map[${arch}]}-static" ]; then
    echo "qemu binary for $arch found";
    uniq_arch["$arch"]=1;
  fi
done

for arch in ${!uniq_arch[@]}; do
  verified_build_architectures+=($arch)
done

echo "verified architectures: ${verified_build_architectures[*]}"
set -u

docker -v
echo