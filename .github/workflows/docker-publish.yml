name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: ps3netsrv

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Build images.
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Define platforms that the image will be built for.
        docker_arch: [amd64, i386, aarch64, armv7, armhf, ppc64le] # arm32v5 is not supported by alpine
        include:
        # amd64
         - docker_arch: amd64
           base_image_prefix: ""
           qemu_arch: ""
           s6_overlay_arch: amd64
        # i386
         - docker_arch: i386
           base_image_prefix: i386/
           qemu_arch: i386
           s6_overlay_arch: x86
        # aarch64
         - docker_arch: aarch64
           base_image_prefix: arm64v8/
           qemu_arch: aarch64
           s6_overlay_arch: aarch64
        # armv7
         - docker_arch: armv7
           base_image_prefix: arm32v7/
           qemu_arch: arm
           s6_overlay_arch: arm
        # armhf
         - docker_arch: armhf
           base_image_prefix: arm32v6/
           qemu_arch: arm
           s6_overlay_arch: armhf
        # ppc64le
         - docker_arch: ppc64le
           base_image_prefix: ppc64le/
           qemu_arch: ppc64le
           s6_overlay_arch: ppc64le

    steps:
    - name: Register binfmt_misc entry for qemu-user-static 
      env:
        QEMU_ARCH: ${{ matrix.qemu_arch }}
      run: |
        if [ -n "${QEMU_ARCH}" ]; then
        	docker rm $(docker create --volume qemu-user-static:/usr/bin multiarch/qemu-user-static:${QEMU_ARCH} dummy)
        	docker run --rm --privileged --volume qemu-user-static:/usr/bin:ro multiarch/qemu-user-static:register --persistent yes
        fi
    - name: Build
      env:
        DOCKER_ARCH: ${{ matrix.docker_arch }}
        BASE_IMAGE_PREFIX: ${{ matrix.base_image_prefix }}
        QEMU_ARCH: ${{ matrix.qemu_arch }}
        S6_OVERLAY_ARCH: ${{ matrix.s6_overlay_arch }}
        DOCKERFILE_PATH: Dockerfile
      run: |
        docker build \
          --build-arg BASE_IMAGE_PREFIX=${BASE_IMAGE_PREFIX} \
          --build-arg QEMU_ARCH=${QEMU_ARCH} \
          --build-arg S6_OVERLAY_ARCH=${S6_OVERLAY_ARCH} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VCS_REF=$(git rev-parse --short HEAD) \
          --file $DOCKERFILE_PATH \
          --tag "${IMAGE_NAME}-${DOCKER_ARCH}" \
          .
